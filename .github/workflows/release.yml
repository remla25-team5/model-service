name: Release Model Service
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  build:
    runs-on: ubuntu-24.04

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Parse version info from tag
        run: |
          # Strip 'refs/tags/v' prefix
          VERSION=${GITHUB_REF:11}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          IMG="ghcr.io/${{ github.repository }}"
          IMG=${IMG@L}  # lowercase
          
          docker build \
            --tag $IMG:${{ env.version }} \
            --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
            --tag $IMG:${{ env.version_major }}.latest \
            --tag $IMG:latest \
            .

          docker push $IMG:${{ env.version }}
          docker push $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest
          docker push $IMG:${{ env.version_major }}.latest
          docker push $IMG:latest

      - name: Update VERSION file to match release tag
        run: |
          echo "${{ env.version }}" > VERSION
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION
          git commit -m "ci: sync VERSION file with release ${{ env.version }}" || echo "No changes"
          git push

      - name: Bump main branch to next patch pre-release
        run: |
          set -euo pipefail

          # Checkout main in a subdir
          git fetch origin main
          git worktree add ../main_worktree origin/main

          cd ../main_worktree

          # Calculate next patch pre-release
          CURRENT_VERSION="${{ env.version }}"
          CURRENT_VERSION=${CURRENT_VERSION#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEXT_PATCH=$((PATCH + 1))
          PRE_VERSION="v$MAJOR.$MINOR.$NEXT_PATCH-pre"

          echo "$PRE_VERSION" > VERSION

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION
          git commit -m "ci: bump to next patch pre-release $PRE_VERSION"
          git push origin HEAD:main